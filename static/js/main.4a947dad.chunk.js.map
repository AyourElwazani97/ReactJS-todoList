{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","arraList","setArraList","task","setTask","id","Math","random","myListDate","Date","refInput","React","useRef","useEffect","current","focus","localStorage","setItem","JSON","stringify","className","map","eee","index","onClick","filter","FilteredList","onSubmit","e","preventDefault","htmlFor","type","ref","value","onChange","target","placeholder","name","disabled","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMA2EeA,MAxEf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAGTC,EAAmB,IAAdC,KAAKC,SACVC,EAAa,IAAIC,KAKfC,EAAWC,IAAMC,SAWvB,OAVAC,qBAAU,WACRH,EAASI,QAAQC,QACjBC,aAAaC,QAAQ,WAAWC,KAAKC,UAAUlB,OAS/C,qBAAKmB,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,+CACCnB,EAASoB,KAAI,SAACC,EAAIC,GACjB,OACE,qBAAiBH,UAAU,WAA3B,SACE,6BACE,+BACE,8BACA,sBAAMf,GAAG,eAAT,SAAwB,4BAAIiB,EAAInB,WAEhC,sBAAKiB,UAAU,2BAAf,UACE,sBAAMA,UAAU,kBAAhB,SAAkC,cAAC,IAAD,MAClC,sBAAMI,QACJ,YArBC,SAACnB,GAEpBH,EAAYD,EAASwB,QAAO,SAAAH,GAAG,OAC5BA,EAAIjB,KAAOA,MAkBWqB,CAAaJ,EAAIjB,KACtBe,UAAU,kBAFd,SAEgC,cAAC,IAAD,eAV9BG,MAiBd,8BACE,uBACEI,SAAU,SAACC,GAET,OADAA,EAAEC,iBAxCZ3B,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAEE,OAAKE,KAAGG,sBACpCJ,EAAQ,KAqCF,UAME,gCACE,uBAAO0B,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLC,IAAKtB,EACLuB,MAAO9B,EACP+B,SAAU,SAACN,GAAD,OAAOxB,EAAQwB,EAAEO,OAAOF,QAClCG,YAAY,2BACZC,KAAK,OACLhC,GAAG,YAGP,8BACE,uBAAOiC,SAAoB,KAATnC,GAAcA,EAAKoC,OAAS,EAAGR,KAAK,SAASE,MAAM,qBCtDpEO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a947dad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\nimport {FaCheck, FaTrash} from 'react-icons/fa';\nfunction App() {\n  const [arraList, setArraList] = useState([]);\n  const [task, setTask] = useState(\"\");\n  var id = Math.random()*2000;\n  var myListDate = new Date();\n  const handleMyClick = () => {\n    setArraList([...arraList, { task,id,myListDate }]);\n    setTask(\"\");\n  };\n  const refInput = React.useRef();\n  useEffect(() => {\n    refInput.current.focus();\n    localStorage.setItem('arraList',JSON.stringify(arraList))\n  });\n  const FilteredList = (id) => {\n    //var data = Math.random()/100;\n    setArraList(arraList.filter(eee => \n       eee.id !== id\n    ))\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"sylish__Mine\">\n        <h1>Todo List One</h1>\n        {arraList.map((eee,index) => {\n          return (\n            <div key={index} className=\"data_got\">\n              <ul>\n                <li>\n                  <div>\n                  <span id='first_Letter'><p>{eee.task}</p></span>\n                  </div>\n                  <div className='my__delete_verify__Spans'>\n                    <span className='spans__Color_It'><FaCheck/></span>\n                    <span onClick={\n                      () => {FilteredList(eee.id)}\n                      } className='spans__Color_It'><FaTrash/></span>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          );\n        })}\n        <div>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              return handleMyClick();\n            }}\n          >\n            <div>\n              <label htmlFor=\"task\">Task</label>\n              <input\n                type=\"text\"\n                ref={refInput}\n                value={task}\n                onChange={(e) => setTask(e.target.value)}\n                placeholder=\"What do you need to do ?\"\n                name=\"task\"\n                id=\"task\"\n              />\n            </div>\n            <div>\n              <input disabled={ task === \"\" ||task.length < 8} type=\"submit\" value=\"Add\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}